{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","mint.js","redux/stakeData/dataActions.js","redux/data/dataActions2.js","navbar.js","redux/stakeBlockchain/blockchainActions.js","staking.js","data.js","image/hero.gif","home.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalMinted","isApprovedForAll","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchDataM","dispatch","a","fetch","headers","Accept","configResponse","json","getState","methods","call","connectFailed","connectM","abiResponse","abi","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","Mint","balance","rewards","hasApproved","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","count","setCount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","style","padding","backgroundColor","alt","src","background","borderRadius","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","lineHeight","disabled","newcount","decrementcount","incrementcount","gasLimit","totalCostWei","String","totalGasLimit","console","log","mintTokens","send","to","from","value","once","err","then","receipt","claimNFTs","width","Navbar","openNav","setOpenNav","className","height","fetchData","balanceOf","response","getAllRewards","connect","Staking","claiming","setClaiming","staking","setStaking","unstaking","setUnstaking","tokenId","setTokenId","setTimeout","getDataM","isApproved","unStake","unstakeByIds","Response","approve","setApprovalForAll","claim","claimAll","handleChange","parseInt","split","onChange","placeholder","required","stakeByIds","stake","unstakeAll","Image","id","home","map","item","App","exact","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9675cbc2.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalMinted: 0,\n  isApprovedForAll: false,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalMinted: action.payload.totalMinted,\n        isApprovedForAll: action.payload.isApprovedForAll,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\nexport const fetchDataM = () => {\n\n  // let approved; \n  return async (dispatch) => {\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    dispatch(fetchDataRequest());\n    try {\n      let totalMinted = await store\n        .getState()\n        .blockchain.smartContract.methods.totalMinted()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalMinted\n        })\n      );\n    } catch (err) {\n      // console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchDataM} from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connectM = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchDataM(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\nexport const _Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 70%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\nimport { fetchDataM } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background: linear-gradient(to bottom, #673ab7 0%, #cc00ff 100%);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  ${'' /* box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3); */}\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background: linear-gradient(to bottom, #673ab7 0%, #cc00ff 100%);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${'' /* box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3); */}\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction Mint() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [count, setCount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * count);\n    let totalGasLimit = String(gasLimit * count);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mintTokens(count)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit NFT marketplace to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchDataM(blockchain.account));\n      });\n  };\n\n  const decrementcount = () => {\n    let newcount = count - 1;\n    if (newcount < 1) {\n      newcount = 1;\n    }\n    setCount(newcount);\n  };\n\n  const incrementcount = () => {\n    let newcount = count + 1;\n    if (newcount > 5) {\n      newcount = 5;\n    }\n    setCount(newcount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchDataM(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n       // style={{ padding: 60, background: \"linear-gradient(to bottom, #673ab7 0%, #cc00ff 100%)\"}}\n       style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        {/* <StyledLogo alt={\"logo\"} src={\"/config/images/logo.gif\"} /> */}\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          { <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container> }\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              background: \"linear-gradient(to bottom, #ff5722 0%, #ff6699 100%)\",\n              padding: 24,\n              borderRadius: 24,\n              // border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalMinted} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <s.TextTitle target={\"_blank\"} href={CONFIG.SCAN_LINK}\n              style={{color:'#673ab7'}}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 20)}\n                \n              </s.TextTitle>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalMinted) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                Siberian Husky NFT is an exclusive collection of 5000 randomly generated NFTs on the BNB Chain Blockchain.<br/>\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connectM());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementcount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {count}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementcount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          {/* <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container> */}\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} testnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default Mint;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\nexport let balance;\nexport let rewards;\nexport const fetchData = () => {\n\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n\n      let balanceOf = await store\n      .getState()\n      .blockchain.smartContract.methods.balanceOf(store.getState().blockchain.account)\n        .call()\n        .then((response) => {\n          balance = response;\n        })\n\n      let getAllRewards = await store\n      .getState()\n      .blockchain.smartContract.methods.getAllRewards(store.getState().blockchain.account)\n      .call()\n      .then((response)=>{\n        rewards = response;\n      })\n      dispatch(\n        fetchDataSuccess({\n          balanceOf,\n          getAllRewards\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\nexport let hasApproved; \nexport const fetchDataM = () => {\n\n  // let approved; \n  return async (dispatch) => {\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    dispatch(fetchDataRequest());\n    try {\n      let isApproved = await store\n        .getState()\n        .blockchain.smartContract.methods.isApprovedForAll(store.getState().blockchain.account, CONFIG.CONTRACT_ADDRESS)\n        .call()\n        .then((response) => {\n          hasApproved = response;\n        })\n      dispatch(\n        fetchDataSuccess({\n          isApproved\n        })\n      );\n    } catch (err) {\n      // console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","import { HashLink as Link } from \"react-router-hash-link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n//import { connectM } from \"./redux/blockchain/blockchainActions\";\nimport { fetchDataM } from \"./redux/data/dataActions\";\n\n\nimport \"./styles/navbar.css\";\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchDataM(blockchain.account));\n    }\n  };\n\n  getData();\n\n  // OPEN SIDEBAR\n  const [openNav, setOpenNav] = useState(false);\n\n  return (\n    <>\n      <nav className=\"nav-wrap\">\n        <Link className=\"logo\" to=\"/\">\n          <img\n            src=\"https://i.ibb.co/JRphCP5/faveiconreal.png\"\n            width=\"63\"\n            height=\"60\"\n          />\n        </Link>\n        <ul  className={openNav ? \"active\" : \"\"}>\n          <li\n            className=\"mintbox\"\n            //  onClick={(e) => {\n            //  e.preventDefault();\n            //  dispatch(WalletsModal());\n            // }}\n            onClick={() => setOpenNav(false)}\n          >\n            <Link to=\"/\">HOME</Link>\n          </li>\n          <li className=\"stakebox\" onClick={() => setOpenNav(false)}>\n            <Link to=\"/staking\">STAKE</Link>\n          </li>\n          <li className=\"mintbox\" onClick={() => setOpenNav(false)}>\n            <Link to=\"/mint\">MINT</Link>\n          </li>\n          <a href=\"https://crolicks.gitbook.io/crolick/\" className=\"button3\" onClick={() => setOpenNav(false)}>\n            DOCS\n          </a>\n        </ul>\n\n        <div className=\"hamburger\" onClick={() => setOpenNav(!openNav)}>\n          <input className=\"checkbox\" type=\"checkbox\" onClick={() => setOpenNav(!openNav)}/>\n          <div\n            className={openNav ? \"hamburger_lines active\" : \"hamburger_lines\"}\n            onClick={() => setOpenNav(!openNav)}\n          >\n            <span className=\"line line1\" onClick={() => setOpenNav(!openNav)}></span>\n            <span className=\"line line2\" onClick={() => setOpenNav(!openNav)}></span>\n            <span className=\"line line3\" onClick={() => setOpenNav(!openNav)}></span>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../stakeData/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\nexport let isConnected = false;\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/stakeConfig/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          isConnected = true;\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n          isConnected = false;\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n         isConnected = false;\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n       isConnected = false;\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};","import React, { useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\nimport { connect, isConnected } from \"./redux/stakeBlockchain/blockchainActions\";\nimport { fetchData, balance, rewards} from \"./redux/stakeData/dataActions\";\nimport {fetchDataM, hasApproved } from \"./redux/data/dataActions2\";\n\nimport \"./styles/stake.css\";\n\nconst Staking = () => {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [feedback, setFeedback] = useState(\"STAKE\");\n    const [claiming, setClaiming] = useState(false)\n    const [staking, setStaking] = useState(false);\n    const [unstaking, setUnstaking] = useState(false);\n    const [hasStaked, setHasStaked] = useState(false);\n    const [_stake, _unStake] = useState(\"STAKE\");\n    const account = blockchain.account;\n    const [tokenId, setTokenId] = useState([]);\n    const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n    useEffect(()=>{\n        dispatch(connectM())\n        \n    },[])\n\n    useEffect(()=>{\n        setTimeout(() => {\n            hasApproved ? dispatch(connect()) : dispatch(connectM())\n        }, 3000);\n    },[])\n    const getConfig = async () => {\n    const configResponse = await fetch(\"/stakeConfig/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n    const getDataM = () => {\n        if (account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchDataM())\n        }\n    };\n    const getData = () => {\n        if (account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData())\n        }\n    };\n    useEffect(() => {\n        getConfig();\n    }, []);\n    useEffect(() => {\n        getDataM();\n        getData();\n    }, [account]);\n\n    const stake = (tokenId) => {\n        setStaking(true);\n        setFeedback(\"BUSY\")\n        dispatch(connect())\n        blockchain.smartContract.methods.stakeByIds([tokenId])\n            .send({\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: account\n            })\n            .once(\"error\", (err) => {\n                console.log(err)\n                setStaking(false)\n            })\n            .then((Response)=>{\n                setStaking(false)\n            })\n        \n        setFeedback(\"STAKE\")   \n    }\n\n\n    const unStake = async (tokenId) => {\n        setUnstaking(true)\n        dispatch(connect())\n        blockchain.smartContract.methods.unstakeByIds([tokenId])\n            .send({\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: account\n            })\n            .once(\"error\", (err) => {\n                console.log(err)\n                setUnstaking(false)\n            })\n            .then((Response)=>{\n                setUnstaking(false)\n            })\n    }\n\n    const unstakeAll = () => {\n        setUnstaking(true)\n        dispatch(connect())\n        blockchain.smartContract.methods.unstakeAll()\n            .send({\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: account\n            })\n            .once(\"error\", (err) => {\n                console.log(err)\n                setUnstaking(false)\n            })\n            .then((Response)=>{\n                setUnstaking(false)\n            })                \n    }\n    \n    const approve = async () => {\n        dispatch(connectM());\n        await blockchain.smartContract.methods\n        .setApprovalForAll(CONFIG.CONTRACT_ADDRESS, true)\n        .send({\n            to: CONFIG.CONTRACT_ADDRESS,\n            from: account\n        })\n        dispatch(connect())\n    }\n\n    const claim = async (tokenId) => {\n        setClaiming(true)\n        dispatch(connect())\n        await blockchain.smartContract.methods.claimAll()\n        .send({\n            to: CONFIG.CONTRACT_ADDRESS,\n            from: account\n        })\n            .once(\"error\", (err) => {\n                console.log(err)\n                setClaiming(false)\n            })\n            .then((Response)=>{\n                setClaiming(false)\n            })\n    }\n    const handleChange = (e) =>{\n        e.preventDefault();\n        setTokenId(parseInt(e.target.value.split(\" \")));\n    }\n\n    return ( \n        <main className=\"stake-app\">\n            <h1 style={{color: \"#ff5722\"}}>STAKE</h1>\n            <h2>Stake Siberian Husky NFT($SIBI) to earn HUSKY TOKEN($HUSKY)</h2>\n            <h2>\n                {staking ? \"staking..\" : \"\"}\n                {unstaking ? \"unstaking..\" : \"\"}\n                {claiming ? \"claiming..\" : \"\"}\n            </h2>\n            {/* <button \n                className=\"connect-btn\"\n                onClick={(e)=>{\n                    !isConnected ?\n                    dispatch(connectM())\n                    : e.preventDefault()\n                } }\n            >\n                {!isConnected ? \"CONNECT WALLET\" : account.slice(0, 10)}\n            </button> */}\n            <div className=\"card-container\">\n                <div>\n                    <div>\n                        <p>Stake Siberian Husky NFT</p>\n                        <p>Earn HUSKY</p>\n                    </div>\n                    <blockquote className=\"reward\"><span>BALANCE</span>\n                    {' '}\n                    {balance / 10 ** 18}\n                    {' '}$HUSKY\n                    </blockquote>\n                     <blockquote className=\"reward\"><span>REWARDS</span>\n                    {' '}\n                    {rewards / 10 ** 18}\n                    {' '}$HUSKY\n                    </blockquote>\n                    <form className=\"form\" onChange={handleChange}>\n                       <input\n                            type=\"all\"\n                            placeholder=\"Enter TokenId\"\n                            className=\"\"\n                            required\n                        />\n                        <button \n                            className=\"btn stake-btn\" \n                            onClick={hasApproved ? (e) => {\n                                e.preventDefault()\n                                stake(tokenId)\n                                } : \n                                (e) => {\n                                e.preventDefault()\n                                approve(tokenId)\n                                }}\n                                >\n                            {hasApproved ? \"STAKE\" : \"APPROVE\"}\n                        </button>\n                    </form>\n                    <form className=\"form\" onChange={handleChange}>\n                        <input\n                            type=\"all\"\n                            placeholder=\"Enter TokenId\"\n                            className=\"\"\n                            required\n                        />\n                        <button \n                            className=\"btn stake-btn\" \n                            onClick={(e)=> {\n                                e.preventDefault()\n                                unStake(tokenId)\n                            }}>\n                            UNSTAKE\n                        </button>\n                    </form>\n                    <div>\n                        <button \n                            className=\"btn\"\n                            onClick={claim}>\n                            CLAIM HUSKY\n                        </button>\n                    </div>\n                    <div className=\"\">\n                        <button \n                            className=\"btn mb-5\"\n                            onClick={unstakeAll}>\n                            UNSTAKE ALL\n                        </button>\n                    </div>\n                </div>\n                \n            </div>\n        </main>\n    );\n}\nexport default Staking ;\n","export const Image = [{\n    id: 1,\n    img: \"https://i.ibb.co/5YVc07W/2653.png\",\n\n},\n{\n    id: 2,\n    img: \"https://i.ibb.co/Ldkjsph/3.png\",\n},\n{\n    id: 3,\n    img: \"https://i.ibb.co/0YZbjxc/7.png\",\n},\n\n\n{\n    id: 4,\n    img: \"https://i.ibb.co/g7cB3L6/23.png\",\n\n},\n\n{\n    id: 5,\n    img: \"https://i.ibb.co/HGbjWZK/30.png\",\n\n},\n\n{\n    id: 6,\n    img: \"https://i.ibb.co/8BgsXzk/34.png\",\n},\n{\n    id: 7,\n    img: \"https://i.ibb.co/m44f2Z5/37.png\",\n},\n{\n    id: 8,\n    img: \"https://i.ibb.co/MDLQkyb/43.png\",\n},\n];\n\n\n{\n/* <img src=\"https://i.ibb.co/56jtMfR/IMG-4-B9-ED0-B03-B8-E-8.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-8\" border=\"0\">\n<img src=\"https://i.ibb.co/4mVpgVS/IMG-4-B9-ED0-B03-B8-E-9.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-9\" border=\"0\">\n<img src=\"https://i.ibb.co/Ws4yZBJ/IMG-4-B9-ED0-B03-B8-E-12.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-12\" border=\"0\">\n<img src=\"https://i.ibb.co/5KhKvQC/IMG-4-B9-ED0-B03-B8-E-13.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-13\" border=\"0\">\n<img src=\"https://i.ibb.co/HNwgS0g/IMG-4-B9-ED0-B03-B8-E-14.jpg\" alt=\"IMG-4-B9-ED0-B03-B8-E-14\" border=\"0\"></img> */\n}","export default __webpack_public_path__ + \"static/media/hero.970bd19d.gif\";","import React from 'react'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connectM } from \"./redux/blockchain/blockchainActions\";\nimport { fetchDataM } from \"./redux/data/dataActions\";\nimport \"./image/hero.gif\";\nimport './styles/home.css';\nimport { Image } from \"./data\"\n\nconst home = () => {\n  return (\n    <div className=\"homeContainer\">\n    <div className=\"intro\">\n    <p className=\"h01\">Siberian Husky</p>\n    </div>\n    <div className=\"hero\">\n    <div className=\"svgcont\">\n        <img src=\"https://i.ibb.co/2PbKW2Y/sib1.png\" alt=\"\" className=\"heroimg\" />\n    </div>\n    <div className=\"herotext\">\n\n    <p className=\"h02\">Stake your Siberian Husky NFT to earn HUSKY TOKENS</p>\n    <div className=\"text\">\n    <p></p>\n    <p>Stake your Siberian Husky to earn $HUSKY tokens join the $HUSKY rewards holders</p>\n\n    </div>\n    <a href=\"https://mm.finance/swap?outputCurrency=0x5927d05691329503cdb375992862834fe0cea1f0\" className=\"button2\">Buy $HUSKY</a>\n    </div>\n    </div>\n    <div>\n    <h1 className=\"container\">Siberian Husky</h1>\n        <div className=\"carousel\">\n        <div className=\"image-list\">\n                {Image.map ((item) => (\n                <img key={item.id} src={item.img} className=\"caroimg\" />\n                ))}\n            </div>\n        </div>\n    </div>\n    <div className=\"link\">\n    <Link className=\"stake\" to=\"/staking\">Stake</Link>\n    <Link className=\"mint\" to=\"/mint\">Mint</Link>\n    </div>\n    <div className=\"footer\">Siberian Husky Team</div>\n        {/* <li className=\"mintbox\" onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connectM());\n                }}>\n                <Link to=\"/mint\">MINT</Link>\n                </li> */}\n    </div>\n  )\n}\n\nexport default home","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Mint from './mint'\nimport Navbar from './navbar'\nimport Staking from './staking'\nimport Home from './home'\n\nconst App = () => {\n  return (\n   <Router>\n\t\t\t<main>\n        <Navbar />\t\t\t\n        <Switch>\n        <Route exact path=\"/\"\n            render={(props)=>\n              (\n                <Home {...props} \n                  \n                />\n              )\n            }\n          />\n          <Route exact path=\"/mint\"\n            render={(props)=>\n              (\n                <Mint {...props} \n                  \n                />\n              )\n            }\n          />\n          <Route path=\"/staking\"\n            render={(props) =>\n              (\n                <Staking {...props}\n                  \n                />\n              )\n            }\n          />\n        </Switch>\n\t\t\t</main>\n\t\t</Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}